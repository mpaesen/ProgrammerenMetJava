/* Generated by Together */
package ch7;

import java.math.BigDecimal;
import java.util.StringTokenizer;

public class StringThings {
    public static StringBuffer center(String oldString, int width) {
        StringBuffer trimmedString = new StringBuffer(oldString.trim());
        int len = trimmedString.length();
        if (len >= width)
            return trimmedString;
        StringBuffer retString = new StringBuffer();
        int delta = width - len;
        int left, right;
        left = delta / 2;
        right = delta - left;
        for (int i = 0; i < left; i++)
            retString.append(' ');
        retString.append(trimmedString);
        for (int i = 0; i < right; i++)
            retString.append(' ');
        return retString;
    }

    public static String propogate(char propChar, int width) {
        StringBuffer strBuf = new StringBuffer(width);
        for(int i = 0; i<width; i++)
           strBuf.append(propChar);
        return strBuf.toString();
    }

   public static void getLibAndObj(String target, StringBuffer lib, StringBuffer obj){
         int slashPosition = target.indexOf("/");
         lib.setLength(0);
         obj.setLength(0);

         String localLib, localObj;
         if (slashPosition < 0){
            localLib = "*LIBL";
            localObj = target;
         }
         else{
            localLib = target.substring(0, slashPosition);
            localObj = target.substring(slashPosition + 1);
         }
         lib.append(localLib);
         obj.append(localObj);
      }

   public static BigDecimal parseDollarValue(String formattedValue){
      StringTokenizer value = new StringTokenizer(formattedValue, "$,");
      String numbers = new String();
      do
      {
            numbers += value.nextElement();
      }while(value.hasMoreTokens());
      return new BigDecimal(numbers);
   }

   public static String formatDollarValue(BigDecimal bd, char dollarSign, char thousandsSeparator){
         String formattedString = "$" + bd.toString();
         StringBuffer buffer = new StringBuffer(formattedString);
         int decpos = formattedString.indexOf(".");
         if (decpos < 0)
             decpos = formattedString.length();

         int digitcount = 0;
         for(int i = decpos;  i >= 0; i--){
               if (formattedString.charAt(i) == '-')
                  break;
               digitcount++;
               if(((digitcount % 3) == 0) && (i > 1) &&
                  (!((formattedString.charAt(i-2)== dollarSign) ||
                    ((formattedString.charAt(i-2)== '-')))))
                  buffer.insert(i-1, thousandsSeparator);

            }
         return buffer.toString();
      }

    public static void main(String[] argv) {
        String inString, outString;
        inString = "hello";
        outString = center(inString, 10).toString();
        System.out.println("input: '" + inString + "', output: '" + outString + "'");
        outString = center(inString, 11).toString();
        System.out.println("input: '" + inString + "', output: '" + outString + "'");
        outString = center(inString, 12).toString();
        System.out.println("input: '" + inString + "', output: '" + outString + "'");
        String line = propogate('-', 12);
        System.out.println(line);
        String fullName;
        StringBuffer lib = new StringBuffer();
        StringBuffer obj = new StringBuffer();

        fullName = "MYLIB/MYOBJ";
        getLibAndObj(fullName, lib, obj);
        System.out.println("full= "+ fullName+ ", lib = "+lib+", obj = "+obj);

        fullName = "MYOBJ";
        getLibAndObj(fullName, lib, obj);
        System.out.println("full= "+ fullName+ ", lib = "+lib+", obj = "+obj);

        String formattedString = "$-123,456.00";
        BigDecimal bd = parseDollarValue(formattedString);
        System.out.println("format string= "+ formattedString+ ", bd= " +bd);

        String formattedBd = formatDollarValue(bd, '$', ',');
        System.out.println("formatted string= "+ formattedBd);
    }
}
